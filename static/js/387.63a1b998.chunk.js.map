{"version":3,"file":"static/js/387.63a1b998.chunk.js","mappings":"uQAAA,IAAMA,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,WAC7B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,EAA3C,YAA6DG,MACvE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,EAEYC,EAAc,SAAAC,GACzB,OAAOR,MAAM,GAAD,OACPH,EADO,kBACWW,EADX,oBACyBV,EADzB,oBAEVG,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYG,EAAc,SAAAD,GACzB,OAAOR,MAAM,GAAD,OACPH,EADO,kBACWW,EADX,4BACiCV,EADjC,oBAEVG,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYI,EAAiB,SAAAF,GAC5B,OAAOR,MAAM,GAAD,OACPH,EADO,kBACWW,EADX,4BACiCV,EADjC,2BAEVG,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYK,EAAiB,SAAAC,GAC5B,OAAOZ,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,kBAC2Cc,EAD3C,+CAEVX,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C,sHCtDYO,E,OAAOC,GAAAA,GAAH,oE,SCkCjB,EA/BgB,WACd,IAAQN,GAAOO,EAAAA,EAAAA,MAAPP,GACR,GAAsCQ,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAOA,IANAC,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAeF,GAAIP,MAAK,SAAAmB,GACtB,OAAOF,EAAeE,EAAKC,QAC5B,GACF,GAAE,CAACb,IAECS,EAIL,OACE,yBAC0B,IAAvBA,EAAYK,QACX,sEAEA,SAACT,EAAD,UACGI,EAAYM,KAAI,SAAAC,GAAU,OACzB,2BACE,qCAAaA,EAAWC,WACxB,uBAAID,EAAWE,YAFRF,EAAWhB,GADK,OAUpC,C","sources":["components/FetchApi.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6928b414a06a986ae0ddb84cc2231fdd';\n\nexport const getPopularFilms = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n\nexport const getFilmByID = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmCast = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmReviews = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmByQuery = query => {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\nlist-style: none;\npadding: 0;\nmargin: 0;\n`;","import { getFilmReviews } from \"components/FetchApi\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { List } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [filmReviews, setfilmReviews] = useState([]);\n  useEffect(() => {\n    getFilmReviews(id).then(data => {\n      return setfilmReviews(data.results);\n    });\n  }, [id]);\n\n  if (!filmReviews) {\n    return;\n  }\n\n  return (\n    <div>\n      {filmReviews.length === 0 ? (\n        <p>We don`t have any reviews for this movie.</p>\n      ) : (\n        <List>\n          {filmReviews.map(filmReview => (\n            <li key={filmReview.id}>\n              <h3>Author: {filmReview.author}</h3>\n              <p>{filmReview.content}</p>\n            </li>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["BASE_URL","API_KEY","getPopularFilms","fetch","then","response","ok","Error","status","json","getFilmByID","id","getFilmCast","getFilmReviews","getFilmByQuery","query","List","styled","useParams","useState","filmReviews","setfilmReviews","useEffect","data","results","length","map","filmReview","author","content"],"sourceRoot":""}