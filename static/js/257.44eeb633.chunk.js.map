{"version":3,"file":"static/js/257.44eeb633.chunk.js","mappings":"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","sources":["components/FetchApi.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6928b414a06a986ae0ddb84cc2231fdd';\n\nexport const getPopularFilms = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n\nexport const getFilmByID = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmCast = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmReviews = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmByQuery = query => {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Position = styled.div`\n  display: flex;\n`;\n\nexport const LinkBack = styled(Link)`\n  margin-bottom: 14px;\n  display: inline-block;\n  padding: 8px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  background-color: gray;\n  &:hover {\n    color: white;\n    background-color: red;\n  }\n`;\nexport const NavigationLink = styled(NavLink)`\n  display: inline-block;\n  padding: 8px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  background-color: gray;\n  &.active {\n    background-color: red;\n  }\n`;\n\nexport const List = styled.ul`\ndisplay: flex;\ngap: 15px;\nmargin-bottom: 10px;\n`;\n\nexport const Item = styled.li`\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n`;\n\nexport const Img = styled.img`\n  margin-right: 50px;\n`;\n","import { useParams, Outlet, useLocation} from \"react-router-dom\";\nimport { getFilmByID } from \"components/FetchApi\";\nimport { useState, useEffect, Suspense } from 'react';\n\nimport {Container, List, NavigationLink, LinkBack, Item, Img, Position} from './MovieDetails.styled';\nconst BASE_IMG = 'https://image.tmdb.org/t/p/w500/';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const [filmByID, setFilmByID] = useState({});\n  const [ganre, setGanre] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getFilmByID(id).then(data => {\n      setGanre(data.genres);\n      return setFilmByID(data);\n    });\n  }, [id]);\n\n  if (!filmByID) {\n    return;\n  }\n\n  return (\n    <Container>\n      <LinkBack to={location.state?.from ?? '/'}>Go back</LinkBack>\n      <Position>\n        <Img\n          src={`${BASE_IMG}${filmByID.poster_path}`}\n          alt=\"Film poster\"\n          width=\"250\"\n        />\n        <div>\n          <h1>{filmByID.original_title}</h1>\n          <p>User Score: {filmByID.vote_average}</p>\n          <h2> Overview</h2>\n          <p>{filmByID.overview}</p>\n          <h2>Genres</h2>\n          {<p>{ganre.map(genr => genr.name).join(' ')}</p>}\n        </div>\n      </Position>\n      <div>\n        <h3>Additional information</h3>\n        <List>\n          <Item>\n            <NavigationLink to=\"cast\" state={location.state}>\n              Cast\n            </NavigationLink>\n          </Item>\n          <Item>\n            <NavigationLink to=\"reviews\" state={location.state}>\n              Reviews\n            </NavigationLink>\n          </Item>\n        </List>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MoviesDetails;"],"names":["BASE_URL","API_KEY","getPopularFilms","fetch","then","response","ok","Error","status","json","getFilmByID","id","getFilmCast","getFilmReviews","getFilmByQuery","query","Container","styled","Position","LinkBack","Link","NavigationLink","NavLink","List","Item","Img","useParams","useState","filmByID","setFilmByID","ganre","setGanre","location","useLocation","useEffect","data","genres","to","state","from","src","poster_path","alt","width","original_title","vote_average","overview","map","genr","name","join","Suspense","fallback"],"sourceRoot":""}